{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","aws-exports.js","index.js"],"names":["App","useState","coins","updateCoins","fetchCoins","a","updateLoading","limit","input","start","API","get","data","console","log","error","useEffect","updateInput","updateInputValues","type","value","loading","className","placeholder","onChange","e","target","onClick","map","coin","index","name","symbol","price_usd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","awsmobile","Amplify","configure","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAAe,I,cC4EAA,EAvEH,WAAM,MAEaC,mBAAS,IAFtB,mBAETC,EAFS,KAEFC,EAFE,KAOVC,EAAU,uCAAG,gCAAAC,EAAA,sEAEfC,GAAc,GAENC,EAAiBC,EAAjBD,MAAOE,EAAUD,EAAVC,MAJA,SAKIC,IAAIC,IAAI,YAAR,uBAAqCJ,EAArC,kBAAoDE,IALxD,OAKTG,EALS,OAOfT,EAAYS,EAAKV,OAEjBW,QAAQC,IAAIZ,GAEZI,GAAc,GAXC,kDAcfO,QAAQE,MAAR,MAde,0DAAH,qDAmBhBC,qBAAU,WACRZ,MACC,IA5Ba,MA+BWH,mBAAS,CAAEM,MAAO,EAAGE,MAAO,IA/BvC,mBA+BXD,EA/BW,KA+BJS,EA/BI,KAkCZC,EAAoB,SAACC,EAAMC,GAC/BH,EAAY,2BAAKT,GAAN,kBAAcW,EAAOC,MAnChB,EAuCenB,oBAAS,GAvCxB,mBAuCXoB,EAvCW,KAuCFf,EAvCE,KAyChB,OACE,sBAAKgB,UAAU,MAAf,UAEE,uBACEC,YAAY,yBACZC,SAAU,SAAAC,GAAC,OAAIP,EAAkB,QAASO,EAAEC,OAAON,UAGrD,uBACEI,SAAU,SAAAC,GAAC,OAAIP,EAAkB,QAASO,EAAEC,OAAON,QACnDG,YAAY,kBAGd,wBAAQI,QAASvB,EAAjB,yBAECiB,GAAW,6CAGTA,GACDnB,EAAM0B,KAAI,SAACC,EAAMC,GAAP,OACR,gCACE,+BAAKD,EAAKE,KAAV,MAAmBF,EAAKG,UACxB,mCAAMH,EAAKI,eAFHH,UCtDLI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCQCQ,EAZG,CACd,mBAAsB,YACtB,uBAA0B,CACtB,CACI,KAAQ,YACR,SAAY,+DACZ,OAAU,e,MCAtBC,QAAQC,UAAUC,GAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.eeff1b9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react';\nimport {API} from 'aws-amplify';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App = () => {\n  // Create coins variable and set to empty array\n  const [coins, updateCoins] = useState([]);\n  // let coins = [];\n\n  // Define function to all API\n  // async function fetchCoins()\n  const fetchCoins = async () => {\n    try {\n      updateLoading(true);\n\n      const { limit, start } = input;\n      const data = await API.get('cryptoapi', `/coins?limit=${limit}&start=${start}`);\n\n      updateCoins(data.coins);\n      // coins = data.coins;\n      console.log(coins);\n\n      updateLoading(false);\n    }\n    catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Call fetchCoins function when component loads\n  useEffect(() => {\n    fetchCoins();\n  }, []);\n\n  // Create additional state to hold user input for limit and start properties\nconst [input, updateInput] = useState({ limit: 5, start: 0 });\n\n// Create a new function to allow users to update the input values\nconst updateInputValues = (type, value) => {\n  updateInput({ ...input, [type]: value });\n};\n\n// makes React aware of the loading variable\nconst [loading, updateLoading] = useState(true);\n\n  return (\n    <div className=\"App\">\n\n      <input\n        placeholder=\"Enter a starting index\"\n        onChange={e => updateInputValues('start', e.target.value)}\n      />\n\n      <input\n        onChange={e => updateInputValues('limit', e.target.value)}\n        placeholder=\"Enter a limit\"\n      />\n\n      <button onClick={fetchCoins}>Fetch Coins</button>\n\n      {loading && <h2>Loading...</h2>}\n\n      {\n        !loading &&\n        coins.map((coin, index) => (\n          <div key={index}>\n            <h2>{coin.name} - {coin.symbol}</h2>\n            <h5>${coin.price_usd}</h5>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"cryptoapi\",\n            \"endpoint\": \"https://af6mkn0icj.execute-api.us-east-2.amazonaws.com/local\",\n            \"region\": \"us-east-2\"\n        }\n    ]\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\n\nAmplify.configure(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}